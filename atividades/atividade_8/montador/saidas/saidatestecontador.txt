-- Inicializacao das variaveis
--STA @511        tmp(0) := "0100000000000";	-- LDI $0			#Carrega o acumulador com o valor 0
tmp(1) := "0101100100000";	-- STA @288		#Armazena o valor do ACUMULADOR NO HEX1
tmp(2) := "0101000000000";	-- STA @0			#Armazena o valor do acumulador em MEM[0] (constante 0)
tmp(3) := "0101000000010";	-- STA @2			#Armazena o valor do acumulador em MEM[2] (contador)
tmp(4) := "0100000000001";	-- LDI $1			#Carrega o acumulador com o valor 1
tmp(5) := "0101000000001";	-- STA @1			#Armazena o valor do acumulador em MEM[1] (constante 1)

tmp(6) := "0001101100001";	-- LDA @353		#Carrega o acumulador com a leitura do botão KEY1
tmp(7) := "1000000000000";	-- CEQ @0			#Compara com o valor de MEM[0] (constante 0) 
tmp(8) := "0111000000110";	-- JEQ @KEY1		#Desvia se igual a 0 (botão não foi pressionado)
tmp(9) := "1001000001011";	-- JSR @INCREMENTO #O botão foi pressionado, chama a sub-rotina de INCREMENTO
tmp(10) := "0110000000110";	-- JMP @KEY1		#Fecha o laço principal, faz uma nova leitura de KEY0


--STA @511		tmp(11) := "0001000000010";	-- LDA @2			#Carrega o acumulador com o valor de MEM[2] (contador)
tmp(12) := "0010000000001";	-- SOMA @1			#Soma com a constante em MEM[1]
tmp(13) := "0101000000010";	-- STA @2			#Salva o incremento em MEM[2] (contador)
tmp(14) := "0101100100000";	-- STA @288		#Armazena o valor do ACUMULADOR NO HEX1
tmp(15) := "0110000001111";	-- JMP @AQUI       # TRAVA O CODIGO AQUI PARA SO ENTRAR NO INCREMENTO 1 VEZ
tmp(16) := "1010000000000";	-- RET			    #Retorna da sub-rotina
