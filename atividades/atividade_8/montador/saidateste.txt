-- Inicializacao das variaveis
tmp(0) := "0100000000000";	-- LDI $0			#Carrega o acumulador com o valor 0
tmp(1) := "0101000000000";	-- STA @0			#Armazena o valor do acumulador em MEM[0] (constante 0)
tmp(2) := "0101000000010";	-- STA @2			#Armazena o valor do acumulador em MEM[2] (contador)
tmp(3) := "0100000000001";	-- LDI $1			#Carrega o acumulador com o valor 1
tmp(4) := "0101000000001";	-- STA @1			#Armazena o valor do acumulador em MEM[1] (constante 1)

tmp(5) := "0001101100000";	-- LDA @352		#Carrega o acumulador com a leitura do botão KEY0
tmp(6) := "1000000000000";	-- CEQ @0			#Compara com o valor de MEM[0] (constante 0)
tmp(7) := "0111000001010";	-- JEQ @10			#Desvia se igual a 0 (botão não foi pressionado)
tmp(8) := "1001000001010";	-- JSR @INCREMENTO #O botão foi pressionado, chama a sub-rotina de INCREMENTO
tmp(9) := "0110000000101";	-- JMP @KEY0		#Fecha o laço principal, faz uma nova leitura de KEY0

tmp(10) := "0101111111111";	-- STA @511		#Limpa a leitura do botão
tmp(11) := "0001000000010";	-- LDA @2			#Carrega o valor de MEM[2] (contador)
tmp(12) := "0010000000001";	-- SOMA @1			#Soma com a constante em MEM[1]
tmp(13) := "0101000000010";	-- STA @2			#Salva o incremento em MEM[2] (contador)
tmp(14) := "0101100000010";	-- STA @258		#Armazena o valor do bit0 do acumulador no LDR9
tmp(15) := "1010000000000";	-- RET			    #Retorna da sub-rotina
